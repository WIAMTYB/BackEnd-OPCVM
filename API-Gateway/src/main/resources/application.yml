server:
  port: 8080

app:
  config:
    keycloak:
      url: http://localhost:8571
      realm: banking-service

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      default-filters:
        - TokenRelay  # ðŸ”¹ Active la transmission automatique du token aux microservices
      routes:
        - id: client-service
          uri: http://localhost:8081
          predicates:
            - Path=/api/client/**
        - id: invest-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/invest/**
        - id: recommendation-service
          uri: http://localhost:8083
          predicates:
            - Path=/recommendations/**

  security:
    oauth2:
      client:
        provider:
          keycloak:
            token-uri: >-
              ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/token
            authorization-uri: >-
              ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/auth
            user-info-uri: >-
              ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: >-
              ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/certs
            user-info-authentication-method: header
            user-name-attribute: preferred_username

        registration:
          banking-service-client:
            provider: keycloak
            client-id: banking-service-client
            client-secret: wdgvpwDixRK2juyBbT6353MbJcjoPyPw
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8571/login/oauth2/code/keycloak
            scope: openid

      resourceserver:
        jwt:
          jwk-set-uri: >-
            ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/certs
